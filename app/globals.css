@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 245, 222, 179;
  --background-end-rgb: 210, 180, 140;
}

.dark {
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: 0, 0, 0;
  --background-end-rgb: 0, 0, 0;
}

html {
  scroll-behavior: smooth;
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

.no-highlights {
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@keyframes typewriter {
  from {
    width: 0;
    opacity: 1;
  }
  to {
    width: 100%;
    opacity: 1;
  }
}

@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.text-animated {
  display: inline-block;
  overflow: hidden;
  white-space: nowrap;
  animation: typewriter 2.5s steps(60, end) forwards;
  animation-delay: 0.8s;
  opacity: 0;
  width: fit-content;
}

/* @media (max-width: 1024px) {
  .text-animated {
    white-space: nowrap;
    width: fit-content;
    overflow: hidden;
    animation: fadeInUp 3s ease forwards;
    animation-delay: 1s;
    opacity: 0;
    transform: translateY(20px);
  }
} */

.text-fadeInUp {
  display: inline-block;
  animation: fadeInUp 3s ease forwards;
  animation-delay: 3s;
  opacity: 0;
}

@keyframes slide {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-50%);
  }
}

.animate-slide {
  animation: slide 200s linear infinite;
}

.animate-bounce {
  animation: bounce 1s infinite;
  animation-duration: 3s;
}

@keyframes bounce {
  0%,
  100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: translateY(0);
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}

.animate-blink {
  animation: blink 2.5s infinite;
}

@keyframes blink {
  0%,
  20% {
    transform: scaleY(0.8); /* Réduction pour simuler le clignement */
  }
  30%,
  100% {
    transform: scaleY(1); /* Taille normale pour le reste de la durée */
  }
}

.animate-shake {
  animation: shake 3s ease-in-out infinite;
}

@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }
  20% {
    transform: translateX(-4px);
  }
  40% {
    transform: translateX(4px);
  }
  60% {
    transform: translateX(-3px);
  }
  80% {
    transform: translateX(3px);
  }
}

.animate-fade-out {
  position: relative; /* Nécessaire pour le positionnement */
  animation: fadeOutSlide 3s infinite; /* Durée de l'animation et répétition infinie */
}

@keyframes fadeOutSlide {
  0% {
    opacity: 1;
    transform: translateX(0);
  }
  50% {
    opacity: 0;
    transform: translateX(8px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.animate-cat-move {
  position: relative;
  animation: catMove 10s infinite;
}

@keyframes catMove {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  35% {
    opacity: 0;
    transform: translateY(15px);
  }
  40% {
    opacity: 0;
    transform: translateY(-60px);
  }
  45% {
    opacity: 1;
    transform: translateY(0);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-moon-blink {
  animation: moonBlink 5s infinite; /* Animation infinie de 2 secondes */
}

@keyframes moonBlink {
  0%,
  100% {
    opacity: 1;
    filter: brightness(1);
  }
  70% {
    opacity: 0.6;
    filter: brightness(0.9);
  }
}

.animate-sun-spin {
  animation: sunSpin 16s linear infinite;
}

@keyframes sunSpin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.icon-flip {
  display: inline-block;
  animation: flip 8s infinite; /* Animation de flip avec un cycle total de 12 secondes */
}

/* Définition de l'animation de flip */
@keyframes flip {
  0%,
  100% {
    transform: rotateY(0deg); /* Position initiale */
  }
  15% {
    transform: rotateY(180deg); /* Retourne l'élément sur l'axe Y */
  }
  75% {
    transform: rotateY(180deg); /* Reste à l'envers */
  }
  90% {
    transform: rotateY(0deg); /* Retourne à la position initiale */
  }
}
